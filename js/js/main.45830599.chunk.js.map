{"version":3,"sources":["Components/PDFListView.js","Components/PDFViewer.js","App.js","index.js"],"names":["PDFListView","_ref","url","_useState","useState","_useState2","Object","slicedToArray","selectedFile","setSelectedFile","_useState3","_useState4","filelists","setFileLists","getLists","axios","get","concat","then","res","data","lists","useEffect","react_default","a","createElement","className","type","name","placeholder","onChange","e","target","files","accept","onClick","FormData","append","post","map","item","react_router_dom","key","to","pathname","PDFViewer","slug","useParams","viewer","useRef","instance","setInstance","docload","console","log","WebViewer","path","initialDoc","current","submitClick","_ref2","asyncToGenerator","regenerator_default","mark","_callee","docViewer","doc","annotManager","xfdfString","options","arr","blob","fileData","wrap","_context","prev","next","getDocument","getAnnotationManager","exportAnnotations","sent","getFileData","Uint8Array","Blob","statusText","alert","stop","_x","apply","this","arguments","ref","App","react_router","component","Components_PDFViewer","Components_PDFListView","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.45830599.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {\n    Link\n} from 'react-router-dom';\n\nimport axios from 'axios';\n\nimport './../App.css';\n\n\nconst PDFListView = ({url}) => {\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [filelists, setFileLists] = useState([]);\n\n    const getLists = () => {\n        axios.get(`${url}/listpdf`).then(res => {\n            setFileLists(res.data.lists);\n        })\n    }\n    useEffect( () => {\n        getLists();\n    }, [])\n    \n    const onChangeHandler = (e) => {\n        setSelectedFile(e.target.files[0])\n    }\n\n    const uploadFile = (e) => {\n        const data = new FormData();\n        data.append('file', selectedFile);\n        axios.post(`${url}/upload`, data, {}).then(function(res) {\n            getLists();\n        })\n    }\n\n\n    const listRender = () => (\n        <ul>\n       {\n        filelists.map( item => (\n            <li><Link \n            key={item}\n            to={{\n                pathname:`/pdfviewer/${item}`,\n                \n            }}> {item} </Link></li>\n        ))\n    }\n        </ul>\n    )\n\n    return(\n    <div className=\"App\">\n        <div className=\"header\">Smartxchange PDF Viewer </div>\n        <div className=\"fileUpload\">\n            <input \n            type=\"file\" \n            name=\"file\" \n            placeholder=\"Upload PDF file\" \n            onChange={onChangeHandler}\n            accept=\".pdf\"\n            />\n            <button\n                onClick={uploadFile}\n            >Upload</button>\n        </div>\n\n            {listRender()}\n            \n    </div>\n    )\n}\n\nexport default PDFListView;","import React, { useRef, useEffect, useState } from 'react';\nimport WebViewer from '@pdftron/webviewer';\n//import saveAs from 'file-saver';\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport './../App.css';\n\n\nconst PDFViewer = ({url}) => {\n    const {slug} = useParams();\n    const viewer = useRef(null);\n    const [instance, setInstance] = useState(null);\n    const docload = `${url}/${slug}`;\n  console.log(url);\n  // if using a class, equivalent of componentDidMount \n  useEffect(() => {\n    WebViewer(\n      {\n        path: '/webviewer/lib',\n        initialDoc: docload,\n      },\n      viewer.current,\n    ).then((instance) => {\n      setInstance(instance);\n    });\n  },[]);\n\n\n  \n  const submitClick = async (e) => {\n    const { docViewer } = instance;\n    const doc = docViewer.getDocument();\n    const annotManager = docViewer.getAnnotationManager();\n    const xfdfString = await annotManager.exportAnnotations();\n    const options = { xfdfString };\n    const data = await doc.getFileData(options);\n    const arr = new Uint8Array(data);\n    const blob = new Blob([arr], { type: 'application/pdf' });\n    \n    const fileData = new FormData();\n    fileData.append('blob', blob, slug);\n\n    axios.post(`${url}/upload/`, fileData, { // receive two parameter endpoint url ,form data \n      })\n      .then(res => { // then print response status\n        console.log(res.statusText)\n        alert('file saved');\n      })\n  }\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"header\">Smartxchange PDF Viewer\n        <button onClick={submitClick}>SAVE</button>\n      </div>\n      <div className=\"webviewer\" ref={viewer}></div>\n      \n    </div>\n  );\n};\n\nexport default PDFViewer;\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport PDFListView from './Components/PDFListView';\nimport PDFViewer from './Components/PDFViewer'\n\n//const url = 'http://localhost:8081' //local\nconst url = 'http://34.207.169.182:3000';\nexport default function App() {\n  return (\n    <Router>\n        <Switch>\n          <Route \n            path=\"/pdfviewer/:slug\"\n            component={() => <PDFViewer url={url}/>}\n            />\n          <Route \n            path=\"/\"\n            component={() => <PDFListView url={url}/>}>\n          </Route>\n        </Switch>\n    </Router>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}